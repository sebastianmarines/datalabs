# docker-compose.prod.yml
version: '3.8'

services:
  web:
    build: .
    restart: always
    volumes:
      - static_volume:/app/staticfiles
      - media_volume:/app/media
    env_file:
      - .env.prod
    depends_on:
      - db
      - caddy
    networks:
      - datalabs_network

  db:
    image: postgres:15-alpine
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    env_file:
      - .env.prod.db
    networks:
      - datalabs_network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  caddy:
    image: caddy:2-alpine
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro
      - static_volume:/app/staticfiles:ro
      - media_volume:/app/media:ro
      - caddy_data:/data
      - caddy_config:/config
    networks:
      - datalabs_network
    depends_on:
      - web

  pgadmin:
    image: dpage/pgadmin4
    env_file:
      - .env.prod.pgadmin
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    ports:
      - "5050:80"
    networks:
      - datalabs_network
    depends_on:
      - db

volumes:
  postgres_data:
  static_volume:
  media_volume:
  caddy_data:
  caddy_config:
  pgadmin_data:

networks:
  datalabs_network:
    driver: bridge